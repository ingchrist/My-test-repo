# Generated by Django 4.0 on 2022-09-12 13:28

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import transport.validators
import utils.base.general
import utils.base.validators


class Migration(migrations.Migration):

    replaces = [('transport', '0001_initial'), ('transport', '0002_remove_booking_confirmed_booking_state_and_more'), ('transport', '0003_remove_booking_transaction_remove_review_booking_and_more'), ('transport', '0004_alter_booking_tracking_code_and_more'), ('transport', '0005_alter_booking_tracking_code_and_more'), ('transport', '0006_vehicle_kind_alter_vehicle_capacity'), ('transport', '0007_remove_vehicle_user_alter_vehicle_capacity_and_more'), ('transport', '0008_remove_tripobject_pre_booked_seats_and_more'), ('transport', '0009_driver_verified_vehicle_verified_and_more'), ('transport', '0010_alter_tripobject_driver_alter_tripobject_vehicle_and_more'), ('transport', '0011_alter_tripobject_driver_alter_tripobject_vehicle_and_more'), ('transport', '0012_remove_booking_payment_remove_passenger_user_and_more')]

    initial = True

    dependencies = [
        ('payment', '0001_initial'),
        ('payment', '0002_bankaccount_payment'),
        ('account', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('licence', models.ImageField(blank=True, null=True, upload_to=utils.base.general.driver_upload_path_licence)),
                ('id_card', models.ImageField(blank=True, null=True, upload_to=utils.base.general.driver_upload_path_idcard)),
                ('active', models.BooleanField(default=False)),
                ('send_mail_verification', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Transporter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, validators=[utils.base.validators.validate_special_char])),
                ('slug_name', models.SlugField(max_length=200, unique=True)),
                ('rating', models.FloatField(default=0.0, validators=[utils.base.validators.validate_rating_level])),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='account.user')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, validators=[utils.base.validators.validate_special_char])),
                ('tag', models.SlugField(unique=True)),
                ('proof_of_ownership', models.FileField(default=1, upload_to=utils.base.general.vehicle_upload_path)),
                ('plate_number', models.CharField(error_messages={'unique': 'Plate number has already been used by another vehicle'}, max_length=20, unique=True)),
                ('capacity', models.PositiveSmallIntegerField(default=1, help_text='Amount of passengers that can be in vehicle', validators=[django.core.validators.MaxValueValidator(500)])),
                ('active', models.BooleanField(default=False)),
                ('send_mail_verification', models.BooleanField(default=False)),
                ('specifications', models.JSONField(null=True)),
                ('transporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.transporter')),
                ('kind', models.CharField(choices=[('bike', 'Bike'), ('bus', 'Bus'), ('train', 'Train'), ('plane', 'Plane')], default=1, max_length=20)),
                ('verified', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='TripPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trip_type', models.CharField(choices=[('intracity', 'Intracity'), ('intercity', 'Intercity'), ('interstate', 'Interstate'), ('international', 'International')], max_length=20)),
                ('origin', models.CharField(help_text='Name of origin state for trip', max_length=255)),
                ('destination', models.CharField(help_text='Name of destination state for trip', max_length=255)),
                ('boarding_point', models.CharField(help_text='Name of park or address e.g. Ojota Park', max_length=255)),
                ('alighting_point', models.CharField(help_text='Name of park or address e.g. Iwo Road', max_length=255)),
                ('start_date', models.DateField(validators=[transport.validators.validate_start_date])),
                ('take_off_time', models.TimeField()),
                ('duration', models.DurationField()),
                ('amount', models.FloatField(help_text='Amount payed for trip')),
                ('pre_booked_seats', models.PositiveSmallIntegerField(default=0)),
                ('created', models.DateTimeField(editable=False)),
                ('recurring', models.CharField(max_length=16, null=True, validators=[transport.validators.validate_recurring_data])),
                ('driver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='transport.driver')),
                ('vehicle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='transport.vehicle')),
                ('transporter', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='transport.transporter')),
                ('tracking_code', models.CharField(editable=False, max_length=50, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TripObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tracking_code', models.CharField(editable=False, max_length=50, unique=True)),
                ('trip_type', models.CharField(choices=[('intracity', 'Intracity'), ('intercity', 'Intercity'), ('interstate', 'Interstate'), ('international', 'International')], max_length=20)),
                ('origin', models.CharField(help_text='Name of origin state for trip', max_length=255)),
                ('destination', models.CharField(help_text='Name of destination state for trip', max_length=255)),
                ('boarding_point', models.CharField(help_text='Name of park or address e.g. Ojota Park', max_length=255)),
                ('alighting_point', models.CharField(help_text='Name of park or address e.g. Iwo Road', max_length=255)),
                ('take_off_time', models.TimeField()),
                ('duration', models.DurationField()),
                ('amount', models.FloatField(help_text='Amount payed for trip')),
                ('created', models.DateTimeField(editable=False)),
                ('leave_date', models.DateField()),
                ('passengers_count', models.IntegerField(default=0)),
                ('driver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='transport.driver')),
                ('plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='transport.tripplan')),
                ('vehicle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='transport.vehicle')),
                ('state', models.CharField(choices=[('pending', 'Pending'), ('started', 'In transit'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=50)),
                ('transporter', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='transport.transporter')),
                ('rating', models.FloatField(default=0.0, validators=[utils.base.validators.validate_rating_level])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='driver',
            name='transporter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.transporter'),
        ),
        migrations.AddField(
            model_name='driver',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='account.user'),
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tracking_code', models.CharField(editable=False, max_length=50, unique=True)),
                ('created', models.DateTimeField(editable=False)),
                ('trip', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='transport.tripobject')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='account.user')),
                ('state', models.CharField(choices=[('unconfirmed', 'Unconfirmed'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled')], default='unconfirmed', max_length=40)),
                ('rating', models.FloatField(default=0.0, validators=[utils.base.validators.validate_rating_level])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Passenger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=200, validators=[utils.base.validators.validate_special_char])),
                ('last_name', models.CharField(max_length=200, validators=[utils.base.validators.validate_special_char])),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20, validators=[utils.base.validators.validate_phone])),
                ('medical_information', models.TextField()),
                ('send_tips', models.BooleanField(default=False)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.booking')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(editable=False)),
                ('rating', models.FloatField(default=0.0, validators=[utils.base.validators.validate_rating_level])),
                ('comment', models.TextField()),
                ('passenger', models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, to='transport.passenger')),
            ],
            options={
                'verbose_name': 'Transportation review',
            },
        ),
        migrations.AddField(
            model_name='driver',
            name='tracking_code',
            field=models.CharField(editable=False, max_length=50, unique=True),
        ),
        migrations.AddField(
            model_name='driver',
            name='verified',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='tripobject',
            name='driver',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='transport.driver', validators=[transport.validators.validate_active]),
        ),
        migrations.AlterField(
            model_name='tripobject',
            name='vehicle',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='transport.vehicle', validators=[transport.validators.validate_active]),
        ),
        migrations.AlterField(
            model_name='tripplan',
            name='driver',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='transport.driver', validators=[transport.validators.validate_active]),
        ),
        migrations.AlterField(
            model_name='tripplan',
            name='vehicle',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='transport.vehicle', validators=[transport.validators.validate_active]),
        ),
        migrations.AlterField(
            model_name='tripobject',
            name='driver',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='transport.driver', validators=[transport.validators.validate_active, transport.validators.validate_verified]),
        ),
        migrations.AlterField(
            model_name='tripobject',
            name='vehicle',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='transport.vehicle', validators=[transport.validators.validate_active, transport.validators.validate_verified]),
        ),
        migrations.AlterField(
            model_name='tripplan',
            name='driver',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='transport.driver', validators=[transport.validators.validate_active, transport.validators.validate_verified]),
        ),
        migrations.AlterField(
            model_name='tripplan',
            name='vehicle',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='transport.vehicle', validators=[transport.validators.validate_active, transport.validators.validate_verified]),
        ),
        migrations.AlterField(
            model_name='tripobject',
            name='driver',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='transport.driver'),
        ),
        migrations.AlterField(
            model_name='tripobject',
            name='vehicle',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='transport.vehicle'),
        ),
        migrations.AlterField(
            model_name='tripplan',
            name='driver',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='transport.driver'),
        ),
        migrations.AlterField(
            model_name='tripplan',
            name='recurring',
            field=models.CharField(blank=True, max_length=16, null=True, validators=[transport.validators.validate_recurring_data]),
        ),
        migrations.AlterField(
            model_name='tripplan',
            name='vehicle',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='transport.vehicle'),
        ),
        migrations.AlterField(
            model_name='booking',
            name='trip',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='transport.tripobject'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='tripobject',
            name='destination',
            field=models.CharField(help_text='Name of destination state & lga for trip e.g. Oyo, Ibadan Central', max_length=255),
        ),
        migrations.AlterField(
            model_name='tripobject',
            name='origin',
            field=models.CharField(help_text='Name of origin state & lga for trip e.g. Lagos, Ojota', max_length=255),
        ),
        migrations.AlterField(
            model_name='tripplan',
            name='destination',
            field=models.CharField(help_text='Name of destination state & lga for trip e.g. Oyo, Ibadan Central', max_length=255),
        ),
        migrations.AlterField(
            model_name='tripplan',
            name='origin',
            field=models.CharField(help_text='Name of origin state & lga for trip e.g. Lagos, Ojota', max_length=255),
        ),
    ]
